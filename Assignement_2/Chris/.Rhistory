indepTest = disCItest , alpha = 0.01, p=ncol(data),labels =colnames(data), verbose = TRUE)
suffStat = list(C = cor(data), n = nrow(data))
## estimate CPDAG
GM <- pc(suffStat,
## independence test: G^2 statistic
indepTest = disCItest , alpha = 0.01, p=ncol(data),labels =colnames(data), verbose = TRUE)
curvelayout = matrix(0,28,28)
library("bnlearn")
library("pcalg")
library("qgraph")
data = read.csv("C:\\Users\\mosse\\Documents\\GitHub\\bayes-nets-IST\\Assignement_2\\Chris\\IST_corrected_processed.csv")
data = data[ , -which(names(data) %in% c("ddiagun","dnostrk"))]
rdef1=0+1
rdef2=1+1
rdef3=2+1
rdef4=3+1
rdef5=4+1
rdef6=5+1
rdef7=6+1
rdef8=7+1
rxasp=8+1
rxhep=9+1
ddiagisc=10+1
ddiagha=11+1
ddiagun=12+1
dnostrk=13+1
drsisc=14+1
drsh=15+1
dpe=16+1
ddead=17+1
age=18+1
sex=19+1
rsbp=20+1
occode=21+1
LACS=22+1
OTH=23+1
PACS=24+1
POCS=25+1
TACS=26+1
GMlayout = layout=matrix(-1,100,100)
GMlayout[10,1] = sex
GMlayout[10,2] = age
GMlayout[10,3] = rsbp
GMlayout[20,1] = rdef1
GMlayout[20,2] = rdef2
GMlayout[20,3] = rdef3
GMlayout[20,4] = rdef4
GMlayout[20,5] = rdef5
GMlayout[20,6] = rdef6
GMlayout[20,7] = rdef7
GMlayout[20,8] = rdef8
GMlayout[30,1] = ddiagha
GMlayout[30,2] = ddiagisc
GMlayout[40,1] = TACS
GMlayout[40,2] = PACS
GMlayout[40,3] = POCS
GMlayout[40,4] = LACS
GMlayout[40,5] = OTH
GMlayout[50,1] = rxasp
GMlayout[50,2] = dpe
GMlayout[50,3] = rxhep
GMlayout[60,1] = drsisc
GMlayout[60,2] = drsh
GMlayout[70,1] = ddead
GMlayout[80,1] = occode
GMlayout[90,1] = dnostrk
GMlayout[90,2] = ddiagun
suffStat = list(C = cor(data), n = nrow(data))
## estimate CPDAG
GM <- pc(suffStat,
## independence test: G^2 statistic
indepTest = disCItest , alpha = 0.01, p=ncol(data),labels =colnames(data), verbose = TRUE)
curvelayout = matrix(0,28,28)
qgraph(GM,layout = GMlayout,curve=1,curveAll = TRUE)
## estimate CPDAG
GM <- pc(suffStat,
## independence test: G^2 statistic
indepTest = gaussCItest , alpha = 0.01, p=ncol(data),labels =colnames(data), verbose = TRUE)
curvelayout = matrix(0,28,28)
qgraph(GM,layout = GMlayout,curve=1,curveAll = TRUE)
DAG = pc.stable(df,test="x72",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="mi-cg",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="mi-sh",alpha=0.5,undirected = FALSE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
DAG = pc.stable(df,test="mi-g-sh",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="mc-zf",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="smc-zf",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="zf",alpha=0.5,undirected = FALSE)
DAG = pc.stable(df,test="x2",alpha=0.5,undirected = FALSE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("C:\\Users\\mosse\\Documents\\GitHub\\bayes-nets-IST\\Assignement_2\\Chris\\IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 10)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("C:\\Users\\mosse\\Documents\\GitHub\\bayes-nets-IST\\Assignement_2\\Chris\\IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 10)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 0)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 100)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
chisq.test(dataset$LACS, dataset$rdef8)
warnings()
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("C:\\Users\\mosse\\Documents\\GitHub\\bayes-nets-IST\\Assignement_2\\Chris\\IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.5,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("C:\\Users\\mosse\\Documents\\GitHub\\bayes-nets-IST\\Assignement_2\\Chris\\IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=1,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
dataset$age
dataset$age
df
setwd("~/GitHub/bayes-nets-IST/Assignement_2/Chris")
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=1,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library("bnlearn")
library("pcalg")
library("qgraph")
data = read.csv("IST_corrected_processed.csv")
data = data[ , -which(names(data) %in% c("ddiagun","dnostrk"))]
rdef1=0+1
rdef2=1+1
rdef3=2+1
rdef4=3+1
rdef5=4+1
rdef6=5+1
rdef7=6+1
rdef8=7+1
rxasp=8+1
rxhep=9+1
ddiagisc=10+1
ddiagha=11+1
ddiagun=12+1
dnostrk=13+1
drsisc=14+1
drsh=15+1
dpe=16+1
ddead=17+1
age=18+1
sex=19+1
rsbp=20+1
occode=21+1
LACS=22+1
OTH=23+1
PACS=24+1
POCS=25+1
TACS=26+1
GMlayout = layout=matrix(-1,100,100)
GMlayout[10,1] = sex
GMlayout[10,2] = age
GMlayout[10,3] = rsbp
GMlayout[20,1] = rdef1
GMlayout[20,2] = rdef2
GMlayout[20,3] = rdef3
GMlayout[20,4] = rdef4
GMlayout[20,5] = rdef5
GMlayout[20,6] = rdef6
GMlayout[20,7] = rdef7
GMlayout[20,8] = rdef8
GMlayout[30,1] = ddiagha
GMlayout[30,2] = ddiagisc
GMlayout[40,1] = TACS
GMlayout[40,2] = PACS
GMlayout[40,3] = POCS
GMlayout[40,4] = LACS
GMlayout[40,5] = OTH
GMlayout[50,1] = rxasp
GMlayout[50,2] = dpe
GMlayout[50,3] = rxhep
GMlayout[60,1] = drsisc
GMlayout[60,2] = drsh
GMlayout[70,1] = ddead
GMlayout[80,1] = occode
GMlayout[90,1] = dnostrk
GMlayout[90,2] = ddiagun
suffStat = list(C = cor(data), n = nrow(data))
## estimate CPDAG
GM <- pc(suffStat,
## independence test: G^2 statistic
indepTest = gaussCItest , alpha = 0.01, p=ncol(data),labels =colnames(data), verbose = TRUE)
curvelayout = matrix(0,28,28)
qgraph(GM,layout = GMlayout,curve=1,curveAll = TRUE)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=1,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.95,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.99,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.999,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
warnings()
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
data$age = cut(data$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
data$age = as.numeric(data$age.bin)
data$rsbp = cut(data$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
data$rsbp = as.numeric(data$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.999,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.999,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
chisq.test(dataset$drsh, dataset$rdef7)
chisq.test(dataset$drsh, dataset$rxasp)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.5,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = pc.stable(df,test="x2",alpha=0.10,undirected = FALSE,max.sx = 100)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
chisq.test(dataset$drsh, dataset$occode)
chisq.test(dataset$drsh, dataset$rbsp)
chisq.test(dataset$drsh, dataset$occode)
warnings()
DAG = pc.stable(df,test="x2",alpha=0.10,undirected = FALSE,max.sx = 100)
warnings()
cextend(DAG)
plot(cextend(DAG))
qgraph(cextend(DAG))
qgraph(cextend(DAG),curveAll=TRUE)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = cextend(pc.stable(df,test="x2",alpha=0.10,undirected = FALSE,max.sx = 100))
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = cextend(pc.stable(df,test="x2",alpha=0.0001,undirected = FALSE,max.sx = 100))
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
DAG = cextend(pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,max.sx = 100))
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
#cextend
DAG = pc.stable(df,test="x2",alpha=0.05,undirected = FALSE,debug=TRUE)
#cextend
DAG = pc.stable(df,test="x2",alpha=0.05,B=1,undirected = FALSE,debug=TRUE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
DAG = pc.stable(df,test="x2",alpha=0.05,B=1,undirected = FALSE,debug=TRUE)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
#cextend
DAG = pc.stable(df,test="x2",alpha=0.05,B=1000,undirected = FALSE,debug=TRUE)
warnings()
#cextend
DAG = pc.stable(df,test="xs2",alpha=0.05,B=1000,undirected = FALSE,debug=TRUE)
#cextend
DAG = pc.stable(df,test="cor",alpha=0.05,B=1000,undirected = FALSE,debug=TRUE)
#cextend
DAG = pc.stable(df,test="mc-x2",alpha=0.05,B=1000,undirected = FALSE,debug=TRUE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
#cextend
DAG = pc.stable(df,test="mc-x2",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
#cextend
DAG = pc.stable(df,test="mc-adf",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
#cextend
DAG = pc.stable(df,test="x2-adf",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
#cextend
DAG = pc.stable(df,test="x2-smc",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
#cextend
DAG = pc.stable(df,test="smc-x2",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
library(bnlearn)
library(dagitty)
library(qgraph)
dataset = read.csv("IST_corrected_processed.csv")
dataset = dataset[ , -which(names(dataset) %in% c("ddiagun","dnostrk"))]
dataset$age = cut(dataset$age, breaks = c(-Inf,seq(-1,99,by=10),Inf),labels=seq(-10,100,by=10))
dataset$age = as.numeric(dataset$age.bin)
dataset$rsbp = cut(dataset$rsbp, breaks = c(-Inf,seq(50,300,by=25),Inf),labels=seq(50-25,300,by=25))
dataset$rsbp = as.numeric(dataset$rsbp.bin)
df = data.frame(dataset)
col_names <- names(df)
# to do it for some names in a vector named 'col_names'
df[col_names] <- lapply(df[col_names] , factor)
#cextend
DAG = pc.stable(df,test="smc-x2",alpha=0.05,B=1000,undirected = FALSE,debug=FALSE)
#plot(DAG)
qgraph(DAG,curveAll = TRUE)
chisq.test(dataset$rdef4, dataset$rdef3)
